5001      // 00000000, start: addi 0, 1
0150      // 00000001: add 1, 0
b103      // 00000002: cmpi 1, 3
c64d      // 00000003: bgt :unrolled_print_str
d301      // 00000004: movi 3, :char_wr_lo
f304      // 00000005: lui 3, :char_wr_hi
d200      // 00000006: movi 2, :char_pos_lo
f204      // 00000007: lui 2, :char_pos_hi
d520      // 00000008: movi 5, 32
4543      // 00000009, random_char: stor 5, 3
5501      // 0000000a: addi 5, 1
// increment col
5401      // 0000000b: addi 4, 1
06d4      // 0000000c: mov 6, 4
167f      // 0000000d: _andi 6, 127
b646      // 0000000e: cmpi 6, 70
c109      // 0000000f: bne :stor_char
// increment row, reset col
06d4      // 00000010: mov 6, 4
8618      // 00000011: lshi 6, -8
5601      // 00000012: addi 6, 1
d400      // 00000013: movi 4, 0
04f6      // 00000014: lu 4, 6
b619      // 00000015: cmpi 6, 25
c102      // 00000016: bne :stor_char
// reset to beginning
d400      // 00000017: movi 4, 0
4442      // 00000018, stor_char: stor 4, 2
cef0      // 00000019: buc :random_char
@00000100 // start assembling at address 00000100
// data: 
03e8 007b  0006 000b
2328 2329
@00000050 // start assembling at address 00000050
// unrolled print 'hallo!' @ row:10, col:10
d700      // 00000050, unrolled_print_str: movi 7, :char_pos_lo
f704      // 00000051: lui 7, :char_pos_hi
d801      // 00000052: movi 8, :char_wr_lo
f804      // 00000053: lui 8, :char_wr_hi
d90a      // 00000054: movi 9, 10
f90a      // 00000055: lui 9, 10
4947      // 00000056: stor 9, 7
da68      // 00000057: movi 10, 104
4a48      // 00000058: stor 10, 8
5901      // 00000059: addi 9, 1
4947      // 0000005a: stor 9, 7
da61      // 0000005b: movi 10, 97
4a48      // 0000005c: stor 10, 8
5901      // 0000005d: addi 9, 1
4947      // 0000005e: stor 9, 7
da6c      // 0000005f: movi 10, 108
4a48      // 00000060: stor 10, 8
5901      // 00000061: addi 9, 1
4947      // 00000062: stor 9, 7
da6c      // 00000063: movi 10, 108
4a48      // 00000064: stor 10, 8
5901      // 00000065: addi 9, 1
4947      // 00000066: stor 9, 7
da6f      // 00000067: movi 10, 111
4a48      // 00000068: stor 10, 8
5901      // 00000069: addi 9, 1
4947      // 0000006a: stor 9, 7
da21      // 0000006b: movi 10, 33
4a48      // 0000006c: stor 10, 8
5901      // 0000006d: addi 9, 1
4947      // 0000006e: stor 9, 7
// end print
d300      // 0000006f: movi 3, :start_lo
f300      // 00000070: lui 3, :start_hi
4ec3      // 00000071: juc 3
