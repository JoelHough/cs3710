a001      // 00000000, start: addi 0, 1
01a0      // 00000001: add 1, 0
b132      // 00000002: cmpi 1, 50
ce4d      // 00000003: buc :unrolled_print_str
d000      // 00000004: movi 0, :char_pos_lo
f004      // 00000005: lui 0, :char_pos_hi
4143      // 00000006, random_char: stor 1, 3
a301      // 00000007: addi 3, 1
a201      // 00000008: addi 2, 1
04d2      // 00000009: mov 4, 2
14ff      // 0000000a: _andi 4, 255
b446      // 0000000b: cmpi 4, 70
ce09      // 0000000c: buc :stor_char
04d2      // 0000000d: mov 4, 2
8418      // 0000000e: lshi 4, -8
a401      // 0000000f: addi 4, 1
d200      // 00000010: movi 2, 0
02f4      // 00000011: lu 2, 4
b419      // 00000012: cmpi 4, 25
ce02      // 00000013: buc :stor_char
d200      // 00000014: movi 2, 0
4042      // 00000015, stor_char: stor 0, 2
cef0      // 00000016: buc :random_char
@00000100 // start assembling at address 00000100
// data: 
03e8 007b  0006 000b
2328 2329
@00000050 // start assembling at address 00000050
// unrolled print 'hallo!' @ row:10, col:10
d700      // 00000050, unrolled_print_str: movi 7, :char_pos_lo
f704      // 00000051: lui 7, :char_pos_hi
d801      // 00000052: movi 8, :char_wr_lo
f804      // 00000053: lui 8, :char_wr_hi
d90a      // 00000054: movi 9, 10
f90a      // 00000055: lui 9, 10
4749      // 00000056: stor 7, 9
da68      // 00000057: movi 10, 104
484a      // 00000058: stor 8, 10
a901      // 00000059: addi 9, 1
4749      // 0000005a: stor 7, 9
da61      // 0000005b: movi 10, 97
484a      // 0000005c: stor 8, 10
a901      // 0000005d: addi 9, 1
4749      // 0000005e: stor 7, 9
da6c      // 0000005f: movi 10, 108
484a      // 00000060: stor 8, 10
a901      // 00000061: addi 9, 1
4749      // 00000062: stor 7, 9
da6c      // 00000063: movi 10, 108
484a      // 00000064: stor 8, 10
a901      // 00000065: addi 9, 1
4749      // 00000066: stor 7, 9
da6f      // 00000067: movi 10, 111
484a      // 00000068: stor 8, 10
a901      // 00000069: addi 9, 1
4749      // 0000006a: stor 7, 9
da21      // 0000006b: movi 10, 33
484a      // 0000006c: stor 8, 10
a901      // 0000006d: addi 9, 1
4749      // 0000006e: stor 7, 9
// end print
d300      // 0000006f: movi 3, :start_lo
f300      // 00000070: lui 3, :start_hi
4ec3      // 00000071: juc 3
